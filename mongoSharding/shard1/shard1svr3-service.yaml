---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: shard1svr3
  name: shard1svr3
spec:
  type: NodePort
  ports:
  - name: "30007"
    port: 27017
    targetPort: 27017
    nodePort: 30007
  selector:
    io.kompose.service: shard1svr3
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: shard1svr3
  name: shard1svr3
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: shard1svr3
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: shard1svr3
    spec:
      containers:
      - args:
        - mongod
        - --shardsvr
        - --replSet
        - shard1rs
        - --port
        - "27017"
        - --dbpath
        - /data/db
        image: mongo
        imagePullPolicy: ""
        name: shard1svr3
        ports:
        - containerPort: 27017
        resources: {}
        volumeMounts:
        - mountPath: /data/db
          name: shard1svr3
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: shard1svr3
        persistentVolumeClaim:
          claimName: shard1svr3
status: {}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: shard1svr3
  name: shard1svr3
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
